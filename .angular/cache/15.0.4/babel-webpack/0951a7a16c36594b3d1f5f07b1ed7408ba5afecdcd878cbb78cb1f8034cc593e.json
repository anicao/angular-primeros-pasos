{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ListComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 2)(1, \"span\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"strong\");\n    i0.ɵɵtext(6, \"Power:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"span\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const isEven_r5 = ctx.even;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", item_r1.name, \" - \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r1.power);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"es el par : \", isEven_r5, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"es el impar : \", isEven_r5, \"\");\n  }\n}\nexport class ListComponent {\n  constructor() {\n    this.characterList = [{\n      name: 'Trunks',\n      power: 10\n    }];\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)();\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"dbz-list\"]],\n  inputs: {\n    characterList: \"characterList\"\n  },\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"], [1, \"text-primary\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h4\");\n      i0.ɵɵtext(1, \"Listado\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ul\", 0);\n      i0.ɵɵtemplate(3, ListComponent_li_3_Template, 13, 5, \"li\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.characterList);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAEIA,6BAO4B;IACKA,YAAU;IAAAA,iBAAO;IAC9CA,4BAAM;IAAAA,YAAgB;IAAAA,iBAAO;IAC7BA,8BAAQ;IAAAA,sBAAM;IAAAA,iBAAS;IAACA,4BAAM;IAAAA,YAAc;IAAAA,iBAAO;IACnDA,4BAAM;IAAAA,aAAsB;IAAAA,iBAAO;IACnCA,6BAAM;IAAAA,aAAwB;IAAAA,iBAAO;;;;;;IAJRA,eAAU;IAAVA,8BAAU;IACjCA,eAAgB;IAAhBA,8CAAgB;IACQA,eAAc;IAAdA,mCAAc;IACtCA,eAAsB;IAAtBA,oDAAsB;IACtBA,eAAwB;IAAxBA,sDAAwB;;;ACNtC,OAAM,MAAOC,aAAa;EAL1BC;IAOS,kBAAa,GAAiB,CAAC;MACpCC,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAC;KACP,CAAC;;;AALSH,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAI;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR1BX,0BAAI;MAAAA,uBAAO;MAAAA,iBAAK;MAChBA,6BAAuB;MACnBA,6DAaK;MACTA,iBAAK;;;MAbaA,eACT;MADSA,2CACT","names":["i0","ListComponent","constructor","name","power","selectors","inputs","characterList","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/victordanielanica/Documents/Repos/Angularproyect/02 bases/src/app/dbz/components/list/list.component.html","/Users/victordanielanica/Documents/Repos/Angularproyect/02 bases/src/app/dbz/components/list/list.component.ts"],"sourcesContent":["<h4>Listado</h4>\n<ul class=\"list-group\">\n    <li *ngFor=\"\n    let item of characterList; \n    let i = index;\n    let isFirst = first;\n    let isLast = last;\n    let isEven = even;\n    let isOdd = odd;\n    \" class = \"list-group-item\">\n        <span class = \"text-primary\">{{ i +1 }}</span>\n        <span>{{item.name}} - </span> \n        <strong>Power:</strong> <span>{{item.power}}</span>\n        <span>es el par : {{isEven}}</span>\n        <span>es el impar : {{isEven}}</span>\n    </li>\n</ul>","import { Component, Input } from '@angular/core';\nimport { Character } from '../../interfaces/character.interface';\n\n@Component({\n  selector: 'dbz-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent {\n  @Input()\n  public characterList : Character[] = [{\n    name: 'Trunks',\n    power:10 \n  }]\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}